version: 1
disable_existing_loggers: true

formatters:
    standard:
        format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
    error:
        format: "%(levelname)s <PID %(process)d:%(processName)s> %(name)s.%(funcName)s(): %(message)s"

handlers:
    console:
        class: logging.StreamHandler
        level: DEBUG
        formatter: standard
        stream: ext://sys.stdout

    info_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: INFO
        formatter: standard
        filename: ./logs/info.log
        maxBytes: 3000000
        backupCount: 3
        encoding: utf8

    error_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: ERROR
        formatter: error
        filename: ./logs/errors.log
        maxBytes: 3000000
        backupCount: 3
        encoding: utf8

    debug_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: DEBUG
        formatter: standard
        filename: ./logs/debug.log
        maxBytes: 3000000
        backupCount: 3
        encoding: utf8

    critical_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: CRITICAL
        formatter: standard
        filename: ./logs/critical.log
        maxBytes: 3000000
        backupCount: 3
        encoding: utf8

    warn_file_handler:
        class: logging.handlers.RotatingFileHandler
        level: WARN
        formatter: standard
        filename: ./logs/warn.log
        maxBytes: 3000000
        backupCount: 3
        encoding: utf8

root:
    level: NOTSET
    handlers: [console]
    propogate: yes

loggers:

    fmp_etl_logger:
        level: DEBUG
        handlers: [info_file_handler, error_file_handler, critical_file_handler, debug_file_handler, warn_file_handler]
        propogate: yes
    tink_etl_logger:
        level: DEBUG
        handlers: [ info_file_handler, error_file_handler, critical_file_handler, debug_file_handler, warn_file_handler ]
        propogate: yes